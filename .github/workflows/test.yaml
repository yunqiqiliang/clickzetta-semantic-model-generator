name: Semantic Model Generator Test

on:
  pull_request:
    paths:
      - "semantic_model_generator/**"
      - "pyproject.toml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Caching dependencies using Poetry
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: |
          $HOME/.local/bin/poetry config virtualenvs.create false

      - name: Install dependencies using Poetry
        run: |
          $HOME/.local/bin/poetry install --no-interaction

      - name: Test
        run: |
          make test_github_workflow
